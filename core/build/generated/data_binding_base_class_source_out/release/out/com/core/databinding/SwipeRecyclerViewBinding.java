// Generated by view binder compiler. Do not edit!
package com.core.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewStub;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.core.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SwipeRecyclerViewBinding implements ViewBinding {
  @NonNull
  private final SwipeRefreshLayout rootView;

  @NonNull
  public final ViewStub layoutNoData;

  @NonNull
  public final ProgressBar loadMore;

  @NonNull
  public final RecyclerView rcv;

  @NonNull
  public final SwipeRefreshLayout swipeToRefresh;

  private SwipeRecyclerViewBinding(@NonNull SwipeRefreshLayout rootView,
      @NonNull ViewStub layoutNoData, @NonNull ProgressBar loadMore, @NonNull RecyclerView rcv,
      @NonNull SwipeRefreshLayout swipeToRefresh) {
    this.rootView = rootView;
    this.layoutNoData = layoutNoData;
    this.loadMore = loadMore;
    this.rcv = rcv;
    this.swipeToRefresh = swipeToRefresh;
  }

  @Override
  @NonNull
  public SwipeRefreshLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SwipeRecyclerViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SwipeRecyclerViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.swipe_recycler_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SwipeRecyclerViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layout_no_data;
      ViewStub layoutNoData = ViewBindings.findChildViewById(rootView, id);
      if (layoutNoData == null) {
        break missingId;
      }

      id = R.id.loadMore;
      ProgressBar loadMore = ViewBindings.findChildViewById(rootView, id);
      if (loadMore == null) {
        break missingId;
      }

      id = R.id.rcv;
      RecyclerView rcv = ViewBindings.findChildViewById(rootView, id);
      if (rcv == null) {
        break missingId;
      }

      SwipeRefreshLayout swipeToRefresh = (SwipeRefreshLayout) rootView;

      return new SwipeRecyclerViewBinding((SwipeRefreshLayout) rootView, layoutNoData, loadMore,
          rcv, swipeToRefresh);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
